plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.1'
	id 'io.spring.dependency-management' version '1.1.4'
	id "com.google.protobuf" version "0.8.17"
}

group = 'com.aws_s3_wrapper'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'io.github.lognet:grpc-spring-boot-starter:5.1.5'
	implementation 'org.jmdware:s3-bucket-recursor:1.0.1'
	implementation 'software.amazon.awssdk:s3:2.20.109'
	runtimeOnly 'com.h2database:h2'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'io.grpc:grpc-netty-shaded:1.45.1'
	implementation 'io.grpc:grpc-protobuf:1.45.1'
	implementation 'io.grpc:grpc-stub:1.45.1'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'javax.annotation:javax.annotation-api:1.3.2'
	implementation 'net.devh:grpc-server-spring-boot-starter:2.13.0.RELEASE'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.2'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.2'
	testImplementation 'org.mockito:mockito-core:3.12.4'
}

protobuf {
	protoc {
		artifact = 'com.google.protobuf:protoc:3.17.3'
	}
	plugins {
		grpc {
			artifact = 'io.grpc:protoc-gen-grpc-java:1.45.1'
		}
	}
	generateProtoTasks {
		all().forEach {
			it.plugins {
				grpc {}
			}
		}
	}
}

sourceSets {
	main {
		java {
			srcDirs 'generated/main/grpc'
			srcDirs 'generated/main/java'
		}
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.named("compileJava").configure {
	dependsOn tasks.named("generateProto")
}

jar {
	duplicatesStrategy = DuplicatesStrategy.INCLUDE
	from {
		configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) }
	}
	manifest {
		attributes(
			'Main-Class': 'com.aws_s3_wrapper.aws_s3_wrapper.AwsS3WrapperApplication'
		)
	}
}
